<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel='stylesheet' href='/stylesheets/top_menu.css' />
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script src="/javascripts/three.min.js"></script>
    <script src="http://code.createjs.com/easeljs-0.6.0.min.js"></script>
    <!--[if IE]><script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
    <!--[if lt IE 9]><script src="http://ie7-js.googlecode.com/svn/version/2.1(beta4)/IE9.js"></script><![endif]-->
	<!--<script src="http://code.createjs.com/tweenjs-0.2.0.min.js"></script>-->

    <script>
    //three.js demo
    var camera, scene, renderer;
    var geometry, material, mesh;

    var canvas, stage, exportRoot;
    var container, form, fakeform;		
       
      
    function init() {

        camera = new THREE.PerspectiveCamera( 45, (window.innerWidth/4) / (window.innerHeight/4), 1, 10000 );
        camera.position.z = 500;

        scene = new THREE.Scene();

        geometry = new THREE.IcosahedronGeometry( 200, 2);
        material = new THREE.MeshBasicMaterial( { color: 0xff0000, wireframe: true } );

        mesh = new THREE.Mesh( geometry, material );
        scene.add( mesh );

        if (window.WebGLRenderingContext)
			renderer = new THREE.WebGLRenderer();
		else
			renderer = new THREE.CanvasRenderer();
        
        renderer.setSize( window.innerWidth/4, window.innerHeight/4 );
        renderer.setClearColor(0x050505, 1);

        document.getElementById('mainCanvas').appendChild( renderer.domElement );
        //$('#warn').append(renderer.domElement);
                
		}
	
	
    function initStage(){
    		canvas = document.getElementById("world");
    		stage = new createjs.Stage(canvas);
    		canvas.width = window.innerWidth * 0.98;
    		canvas.height = window.innerHeight * 0.85;
			//console.log("canvas width = " + canvas.width);
			//console.log("canvas width = " + canvas.height);
			// this lets our drag continue to track the mouse even when it leaves the canvas:
			// play with commenting this out to see the difference.
			stage.mouseMoveOutside = true; 
			
			var circle = new createjs.Shape();
			circle.graphics.beginFill("rgba(0,0,255,1)").drawCircle(0, 0, 100);
			
			var label = new createjs.Text("Drag this HTML5 canvas circle", "bold 24px Arial", "#00FFFF");
			label.textAlign = "center";
			label.y = -7;
			
			var dragger = new createjs.Container();
			dragger.x =700;  dragger.y = 300;
			dragger.addChild(circle, label);
			stage.addChild(dragger);
			
			dragger.addEventListener("mousedown", function(evt) {
				var offset = {x:evt.target.x-evt.stageX, y:evt.target.y-evt.stageY};
                 
				// add a handler to the event object's onMouseMove callback
				// this will be active until the user releases the mouse button:
				evt.addEventListener("mousemove",function(ev) {
				    ev.target.x = ev.stageX+offset.x;
					ev.target.y = ev.stageY+offset.y;
					stage.update();   
				});
			});
			
			stage.update();
			//initThree();
			//canvas = document.getElementById("world");
			// //DOMElement creation
			// form = document.getElementById("testButton");
			// formDOMElement = new DOMElement(form);
			// //move it's rotation center at the center of the form
			// formDOMElement.regX = form.offsetWidth*0.5;
			// formDOMElement.regY = form.offsetHeight*0.5;
			// //move the form above the screen
			// formDOMElement.x = canvas.width * 0.5;
			// formDOMElement.y = - 200;

			// stage = new Stage(canvas);
			// //add the formDOMElement to the display list
			// stage.addChild(formDOMElement);
			
			// Ticker.setFPS(24);
			// Ticker.addListener(stage);
			
			//Apply a tween to the form
			//Tween.get(formDOMElement).to({alpha:1, y:canvas.height * 0.5, rotation:720},2000,Ease.cubicOut).call(tweenComplete);;
    }

    function animate() {

        // note: three.js includes requestAnimationFrame shim
        requestAnimationFrame( animate );

        mesh.rotation.x += 0.01;
        mesh.rotation.y += 0.02;

        renderer.render( scene, camera );

    }

    //three.js demo ends

   		// check browser type and warn if it is not supported.
    	navigator.sayswho= (function(){
			    var N= navigator.appName, ua= navigator.userAgent, tem;
			    var M= ua.match(/(opera|chrome|safari|firefox|msie)\/?\s*(\.?\d+(\.\d+)*)/i);
			    if(M && (tem= ua.match(/version\/([\.\d]+)/i))!= null) M[2]= tem[1];
			    M= M? [M[1], M[2]]: [N, navigator.appVersion, '-?'];

			    return M;
			})();
			
		window.onload = function(e){			
				if (navigator.sayswho[1] !== undefined){
					if ( navigator.userAgent.match(/(chrome|safari|firefox)\/?\s*(\.?\d+(\.\d+)*)/i) == null ){						
    					initStage();
    					$('#mainCanvas').text('ThreeJS Demo Disabled for windows')
					}
					else{
						init();
    					animate();
    					initStage();
					}
					document.getElementById("warn").innerHTML="<p>Your Browser: "+navigator.sayswho[0]+
													" (version: "+navigator.sayswho[1]+")</p>";
					
				}

				// var c=document.getElementById("world");
				// var ctx=c.getContext("2d");
				// ctx.fillStyle="#FF0000";
				// ctx.fillRect(0,0,150,75);
		};
		//Ajax document init
		$("document").ready(function(){

			$('#cypherButton').bind('click', getInfoFromServer);

			
		});

		function getInfoFromServer(){
			
			$.ajax({
				type: "POST",
				url: "/cypher1",
				data: {	'cypherText':$('#cypherText').val() ,
						'first':$('#firstName').val(),
						 'last':$('#lastName').val() 
						},			
				success: postToPage});
		}

		function postToPage(data, status){
			$('#cResult').text(data)

		}

    </script>
    <style>
	   .flex
	   {
	      /* basic styling */
	      width: 600px;
	      height: 200px;
	      border: 1px solid #555;
	      font: 14px Arial;

	      /* flexbox setup */
	      display: -webkit-flex;
	      -webkit-flex-direction: row;

	      display: flex;
	      flex-direction: row;
	   }

	   .flex > div
	   {
	      -webkit-flex: 1 1 auto;
	      flex: 1 1 auto;

	      width: 30px; /* To make the transition work nicely.  (Transitions to/from
	                      "width:auto" are buggy in Gecko and Webkit, at least.
	                      See http://bugzil.la/731886 for more info.) */

	      -webkit-transition: width 0.7s ease-out;
	      transition: width 0.7s ease-out;
	   }

	   /* colors */
	   .flex > div:nth-child(1){ background : #3399FF; }
	   .flex > div:nth-child(2){ background : #6699CC; }
	   .flex > div:nth-child(3){ background : #003399; }

	   .flex > div:hover
	   {
	        width: 200px;
	   }	   
   </style>
  </head>
  <body style ="padding: 6px;" ondragstart="return false" draggable="false" >
  <canvas id="world" > Big back ground Canvas
  </canvas>
    <div id ="menuDiv" style="position: relative; visibility: visible;">
	    <ul id="menu">
			<li><a href="/test2">Home</a></li>
			<li>
				<a href="#">Categories</a>
				<ul>
					<li><a href="/test3">Mission</a></li>
					<li><a href="/test3">Commander view</a></li>
					<li><a href="/test4">Client view</a></li>
				</ul>
			</li>
			<li><a href="#">Work</a></li>
			<li><a href="#">About</a></li>
			<li><a href="/logout">Log Out</a></li>
		</ul>
    </div>
    <div id ="warn"></div>
    <style>
	    #mainTitle {
	    position: relative;
	    padding-left: 5px;
	    width: 30%; 
	    margin: 0px;
	    pointer-events: none;   
		}	
	</style>
    <div id = "mainTitle">
    <h1><%= title %></h1>
    <p>Welcome to Future <%= title %> Site</p>
    <p><strong> Icosahedron 3D demo with three.js </strong></p>
    <div id = "mainCanvas" ></div>
    </div>
    <!-- <div id ="testButton" style="position: absolute; -webkit-transform-origin: 0% 0%; visibility: visible; opacity: 1; -webkit-transform: matrix(1, 0, 0, 1, 552.5, -274);"> -->
    <div id ="testButton" style="position: absolute; left: 70%; top: 70%; z-index: 2;">
        <p><strong> Node creation Demo with Neo4j NoSQL DB </strong> <p>
    	<form id="theform">
    	<table>
		 <tr>
    	 <td><label>First name:</label></td>
    	 <td><input type="text" id ="firstName" name="FirstName" value="Awesome"></td></tr>
    	 <tr>
		 <td><label>Last name:</label></td>
		 <td> <input type="text" id="lastName" name="LastName" value="commander"></td></tr>
		 <tr>
		 <td><label>Cypher Text:</label></td>
		 <td> <input type="text" id="cypherText" value ="CREATE"></td></tr>
		 <tr>
		 <td></td>
		 <td><button type="button" id="cypherButton"> Do Cypher Query </button></td></tr>
    	</table>
    	</form>
    </div>
    <style>
	    #resultFromMacc {
	    position: relative;
	    padding-left: 5px;
	    width: 30%; 
	    margin: 0px; 	     
		}	
	</style>
    <div id="resultFromMacc">    
    	<h4><strong> Message from the Server:</strong></h4>
    	<p id="cResult">Waiting for the result...</p>
    </div>
   
  </body>
</html>